<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/images/**" security="none"/>
    <http pattern="/styles*/**" security="none"/>
    <http pattern="/scripts*/**" security="none"/>
    <http pattern="/assets*/**" security="none"/>
    <!-- Wicket managed resources (java scripts, css and images) -->
    <http pattern="/wicket/resource/**/*.js" security="none"/>
    <http pattern="/wicket/resource/**/*.css" security="none"/>
    <http pattern="/wicket/resource/**/*.png" security="none"/>
    <http pattern="/wicket/resource/**/*.jpg" security="none"/>

    <!-- Securing at path level doesn't work well with Wicket, because after initial page visit Wicket uses custom
         url format, e.g. edit profile page could be:
         http://localhost:8080/login?wicket:interface=:0:loginForm::IFormSubmitListener:: -->
    <http auto-config="true" access-denied-page="/accessdenied">
        <intercept-url pattern="/login*/**" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
        <intercept-url pattern="/admin/*" access="ROLE_ADMIN"/>
        <intercept-url pattern="/passwordhint*/**" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
        <!-- TODO: MZA: foo* or foo*/** is better for simple page? -->
        <intercept-url pattern="/signup*" access="ROLE_ANONYMOUS,ROLE_ADMIN,ROLE_USER"/>
        <intercept-url pattern="/**" access="ROLE_ADMIN,ROLE_USER"/>

        <form-login login-page="/login" 
                    default-target-url="/home"
                    always-use-default-target="true"
                    authentication-failure-url="/login/error"
                    login-processing-url="/j_security_check"/>

        <remember-me user-service-ref="userDao" key="e37f4b31-0c45-11dd-bd0b-0800200c9a66"/>
    </http>

    <beans:bean id="sessionRegistry"
                class="org.springframework.security.core.session.SessionRegistryImpl" />

    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDao">
            <password-encoder ref="passwordEncoder">
            </password-encoder>
        </authentication-provider>
    </authentication-manager>


    <!-- Override the default password-encoder (BCrypt) by uncommenting the following and changing the class -->
    <!-- <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->

    <global-method-security>
        <protect-pointcut expression="execution(* *..service.UserManager.getUsers(..))" access="ROLE_ADMIN"/>
        <protect-pointcut expression="execution(* *..service.UserManager.removeUser(..))" access="ROLE_ADMIN"/>
    </global-method-security>
</beans:beans>
